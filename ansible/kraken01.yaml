- name: Kraken01 config
  hosts: kraken01
  become: true
  gather_facts: true
  tasks:
    - name: Mount homelab NFS volume
      ansible.posix.mount:
        src: 192.168.0.115:/volume1/homelab
        path: /mnt/homelab
        opts: rw,sync,hard
        state: mounted
        fstype: nfs

    - name: Mount media NFS volume
      ansible.posix.mount:
        src: 192.168.0.115:/volume1/homelab/media-server/plex/data
        path: /mnt/media
        opts: rw,sync,hard
        state: mounted
        fstype: nfs

    - name: Install packages
      dnf:
        state: latest
        update_cache: true
        name:
          - podman
          - htop

    - name: Start podman.socket
      systemd_service:
        name: podman.socket
        state: started
        enabled: true
        daemon_reload: true

    - name: Create podman exporter container
      containers.podman.podman_container:
        name: podman-exporter
        state: quadlet
        image: quay.io/navidys/prometheus-podman-exporter:v1.18.1
        command:
          - prometheus-podman-exporter
          - --collector.enable-all
        ports:
          - "9882:9882"
        env:
          CONTAINER_HOST: unix:///run/podman/podman.sock
        volumes:
          - "/run/podman/podman.sock:/run/podman/podman.sock"
        user: root
        security_opt:
          - "label=disable"
        cpus: 0.25
        memory: 128m
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: podman_exporter_conf

    - name: Start podman exporter
      systemd_service:
        name: podman-exporter
        state: "{{ 'restarted' if podman_exporter_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true

    - name: Create node exporter container
      containers.podman.podman_container:
        name: node-exporter
        state: quadlet
        image: quay.io/prometheus/node-exporter:v1.9.1
        command:
          - "--path.rootfs=/host"
        ports:
          - "9100:9100"
        env:
          CONTAINER_HOST: unix:///run/podman/podman.sock
        volumes:
          - "/:/host:ro,rslave"
        user: root
        cpus: 0.25
        memory: 128m
        network: host
        pid: host
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: node_exporter_conf

    - name: Open node exporter port in firewalls
      ansible.posix.firewalld:
        port: 9100/tcp
        state: enabled
        permanent: true
        immediate: true
        offline: true

    - name: Start node exporter
      systemd_service:
        name: node-exporter
        state: "{{ 'restarted' if node_exporter_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true

    - name: Login to ghcr.io
      containers.podman.podman_login:
        username: "{{ lookup('community.general.onepassword', 'ghcr.io', vault='Homelab', field='username', errors='warn') }}"
        password: "{{ lookup('community.general.onepassword', 'ghcr.io', vault='Homelab', field='password', errors='warn') }}"
        registry: ghcr.io

    - name: Create qbittorrent-wireguard container
      containers.podman.podman_container:
        name: qbittorrent-wireguard
        state: quadlet
        image: lscr.io/linuxserver/wireguard:latest
        cap_add:
          - net_admin
          - net_raw
        sysctl:
          "net.ipv4.conf.all.src_valid_mark": "1"
        ports:
          - "8080:8080"
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "america/los_angeles"
        volumes:
          - /mnt/homelab/media-server/qbittorrent/wireguard/wg0.conf:/config/wg_confs/wg0.conf
        cpus: 0.1
        memory: 128m
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: qbittorrent_wireguard_conf

    - name: Start qbittorrent-wireguard
      systemd_service:
        name: qbittorrent-wireguard
        state: "{{ 'restarted' if qbittorrent_wireguard_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true

    - name: Create qbittorrent container
      containers.podman.podman_container:
        name: qbittorrent
        state: quadlet
        image: docker.io/qbittorrentofficial/qbittorrent-nox:5.1.2-2
        network:
          - container:qbittorrent-wireguard
        cpus: 0.5
        memory: 1g
        volumes:
          - "/mnt/homelab/media-server/qbittorrent/data:/config"
          - "/mnt/media:/media"
        env:
          TZ: "America/Los_Angeles"
          PGID: "1000"
          PUID: "1000"
          QBT_LEGAL_NOTICE: "confirm"
          WEBUI_PORT: "8080"
          TORRENTING_PORT: 54058
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: qbittorrent_conf

    - name: Start qbittorrent
      systemd_service:
        name: qbittorrent
        state: "{{ 'restarted' if qbittorrent_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true

    - name: Create prowlarr config directory
      file:
        state: directory
        path: /opt/prowlarr/data
        owner: 1000
        group: 1000
        mode: 0755

    - name: Create prowlarr container
      containers.podman.podman_container:
        name: prowlarr
        state: quadlet
        image: docker.io/linuxserver/prowlarr:2.0.5
        ports:
          - "9696:9696"
        volumes:
          - "/mnt/homelab/media-server/prowlarr/backups:/backups"
          - "/mnt/media:/media"
          - "/opt/prowlarr/data:/config:z"
        env:
          TZ: "America/Los_Angeles"
          PGID: "1000"
          PUID: "1000"
        cpus: 0.25
        memory: 256m
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: prowlarr_conf

    - name: Start prowlarr
      systemd_service:
        name: prowlarr
        state: "{{ 'restarted' if prowlarr_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true

    - name: Create cleanuparr container
      containers.podman.podman_container:
        name: cleanuparr
        state: quadlet
        image: ghcr.io/cleanuparr/cleanuparr:2.3.1
        ports:
          - "11011:11011"
        volumes:
          - "/mnt/homelab/media-server/cleanuparr/data:/config"
        env:
          TZ: "America/Los_Angeles"
          PGID: "1000"
          PUID: "1000"
        cpus: 0.25
        memory: 512m
        quadlet_options:
          - |
            [Service]
            Restart=always

            [Install]
            WantedBy=default.target
      register: cleanuparr_conf

    - name: Start cleanuparr
      systemd_service:
        name: cleanuparr
        state: "{{ 'restarted' if cleanuparr_conf.changed else 'started' }}"
        enabled: true
        daemon_reload: true
